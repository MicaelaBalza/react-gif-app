{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","handleSubmit","e","preventDefault","trim","length","cats","className","onSubmit","type","value","placeholder","onChange","target","onClick","GifGridItem","id","title","url","src","alt","getGifs","category","a","encodeURI","fetch","respuesta","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GifExpertApp","categories","cat","ReactDOM","render","document","getElementById"],"mappings":"qLAoCeA,EAjCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACLC,mBAAS,IADJ,mBAClCC,EADkC,KACtBC,EADsB,KAOnCC,EAAe,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAIlB,OACI,uBAAMO,UAAU,cAAcC,SAAUP,EAAxC,UACE,uBACEM,UAAU,eACVE,KAAK,OACLC,MAAOX,EACPY,YAAY,cACZC,SAnBa,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACrBb,EAAca,EAAOH,UAoBjB,mBAAGH,UAAU,cAAcO,QAASb,EAApC,SAAmD,e,QClB5Cc,EATK,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAChC,OACE,sBAAKX,UAAU,yCAAf,UACE,qBAAKY,IAAKD,EAAKE,IAAKH,IACpB,4BAAKA,Q,uBCFEI,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfL,EADe,iDACiCM,UAAUF,GAD3C,4BAFR,oCAEQ,SAEGG,MAAMP,GAFT,cAEfQ,EAFe,gBAGEA,EAAUC,OAHZ,uBAGbC,EAHa,EAGbA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAG,MAAK,CAAEf,GAAIe,EAAIf,GAAIC,MAAOc,EAAId,MAAOC,IAAKa,EAAIC,OAAOC,iBAAiBf,QAJ1E,kBAKdW,GALc,4CAAH,sDCqBLK,EAjBC,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAAe,ECHN,SAACA,GAAc,IAAD,EACdxB,mBAAS,CACjC8B,KAAM,GACNO,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAaxC,OAPAC,qBAAU,WACRjB,EAAQC,GAAUiB,MAAK,SAAAV,GAAI,OAAIQ,EAAS,CACtCT,KAAMC,EACNM,SAAS,SAEV,CAACb,IAEGc,EDR0BI,CAAalB,GAAjCU,EAFmB,EAExBJ,KAAaO,EAFW,EAEXA,QAErB,OACE,qCACE,oBAAI5B,UAAU,oCAAd,SAAmDe,IACjDa,GAAW,mBAAG5B,UAAU,mCAAb,wBACb,qBAAKA,UAAU,YAAf,SACKyB,EAAOF,KAAI,SAAAC,GAAG,OACb,cAAC,EAAD,eAA+BA,GAAbA,EAAIf,aEGnByB,MAdf,WAAyB,IAAD,EACc3C,mBAAS,CAAC,YADxB,mBACf4C,EADe,KACH7C,EADG,KAGtB,OACE,qCACE,oBAAIU,UAAU,aAAd,qBACA,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CAAaV,cAAeA,IAC3B6C,EAAWZ,KAAI,SAAAa,GAAG,OAAI,cAAC,EAAD,CAASrB,SAAUqB,GAAUA,a,MCP5DC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.3fe03ea0.chunk.js","sourcesContent":["import { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst AddCategory = ({ setCategories }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const handleChange = ({target}) => {\n    setInputValue(target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if( inputValue.trim().length > 2) {\n      setCategories(cats => [inputValue, ...cats]);\n      setInputValue('');\n    }\n  };\n\n  return (\n      <form className=\"search-form\" onSubmit={handleSubmit}>\n        <input\n          className=\"search-input\"\n          type=\"text\"\n          value={inputValue}\n          placeholder=\"Buscar Gifs\"\n          onChange={handleChange}\n        />\n        <p className=\"search-icon\" onClick={handleSubmit}>{'\\u26B2'}</p>\n      </form>\n  )\n};\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired\n}\n\nexport default AddCategory;\n","const GifGridItem = ({ id, title, url }) => {\n  return (\n    <div className=\"card animate__animated animate__fadeIn\">\n      <img src={url} alt={title} />\n      <p>{ title }</p>\n    </div>\n  )\n};\n\nexport default GifGridItem;\n","const apiKey = 'xoPVTVp6dIO2n1HtzFQXcmJS1Ak3zksb';\n\nexport const getGifs = async (category) => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=9&api_key=${apiKey}`;\n  const respuesta = await fetch(url);\n  const { data } = await respuesta.json();\n  const gifs = data.map(img => ({ id: img.id, title: img.title, url: img.images.downsized_medium.url }))\n  return gifs;\n};\n","// import { useState, useEffect } from 'react'\n\nimport GifGridItem from './GifGridItem'\n\nimport { useFetchGifs } from '../hooks/useFetchGifs'\n\nconst GifGrid = ({ category }) => {\n\n  const { data:images, loading } = useFetchGifs(category);\n\n  return (\n    <>\n      <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n      { loading && <p className=\"animate__animated animate__flash\">Loading...</p> }\n      <div className=\"card-grid\">\n          {images.map(img => (\n            <GifGridItem key={img.id} { ...img } />\n          ))}\n      </div>\n    </>\n  )\n}\n\nexport default GifGrid\n","import { useState, useEffect } from \"react\";\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true\n  });\n\n  useEffect(() => {\n    getGifs(category).then(gifs => setState({\n      data: gifs,\n      loading: false\n    }));\n  }, [category]);\n\n  return state;\n}\n","import { useState } from 'react';\n\nimport AddCategory from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\nfunction GifExpertApp() {\n  const [categories, setCategories] = useState(['Pokemon']);\n\n  return (\n    <>\n      <h2 className=\"page-title\">GIF APP</h2>\n      <div className=\"page-content\">\n        <AddCategory setCategories={setCategories} />\n        {categories.map(cat => <GifGrid category={cat} key={cat} />)}\n      </div>\n    </>\n  )\n};\n\nexport default GifExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}